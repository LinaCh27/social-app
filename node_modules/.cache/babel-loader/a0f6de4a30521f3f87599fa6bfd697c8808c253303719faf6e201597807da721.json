{"ast":null,"code":"var _jsxFileName = \"/Users/lina/Documents/Coding/Programming Course/Cheat Sheets/Workshops/social-app/src/views/SignUp.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport './SignUp.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = props => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const validate = () => {\n    let validationErrors = {\n      username: false,\n      email: false,\n      password: false,\n      confirmPassword: false\n    };\n    //Username\n    if (formData.username.trim().length < 4) {\n      validationErrors.username = true;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          username: \"Username should have at least 4 characters\"\n        };\n      });\n    } else if (!/^[^\\s]*$/.test(formData.username.trim())) {\n      validationErrors.username = true;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          username: \"Username shouldn't have empty characters\"\n        };\n      });\n    } else {\n      validationErrors.username = false;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          username: \"\"\n        };\n      });\n    }\n\n    //Email\n\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.email.trim())) {\n      validationErrors.email = true;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          email: \"There is no valid email\"\n        };\n      });\n    } else {\n      validationErrors.email = false;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          email: \"\"\n        };\n      });\n    }\n\n    //Password\n\n    if (formData.password.trim().length < 6) {\n      validationErrors.password = true;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          password: \"Password should have at least 6 characters\"\n        };\n      });\n    } else if (!/^[^\\s]*$/.test(formData.password.trim())) {\n      validationErrors.password = true;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          password: \"Password shouldn't have empty characters\"\n        };\n      });\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.password.trim())) {\n      validationErrors.password = true;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          password: \"Password must contain a special character: ! # @ $ %\"\n        };\n      });\n    } else {\n      validationErrors.password = false;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          password: \"\"\n        };\n      });\n    }\n\n    //Confirm Password\n\n    if (formData.password.trim() !== formData.confirmPassword.trim()) {\n      validationErrors.confirmPassword = true;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          confirmPassword: \"Passwords should be the same\"\n        };\n      });\n    } else {\n      validationErrors.confirmPassword = false;\n      setErrors(prevErrors => {\n        return {\n          ...prevErrors,\n          confirmPassword: \"\"\n        };\n      });\n    }\n    return !validationErrors.username && !validationErrors.email && !validationErrors.password && !validationErrors.confirmPassword;\n  };\n  const handleInputChange = e => {\n    const target = e.target;\n    const name = target.name;\n    setFormData({\n      ...formData,\n      [name]: target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!validate()) {}\n    axios.post(\"https://akademia108.pl/api/social-app/user/signup\", {\n      username: formData.username,\n      email: formData.email,\n      password: formData.password\n    }).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    children: [props.user && /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm password\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"okJrFuwirWO32E8Er3oyUcs7Juk=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","Navigate","axios","jsxDEV","_jsxDEV","SignUp","props","_s","formData","setFormData","username","email","password","confirmPassword","errors","setErrors","validate","validationErrors","trim","length","prevErrors","test","handleInputChange","e","target","name","value","handleSubmit","preventDefault","post","then","res","console","log","data","catch","error","className","children","user","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/lina/Documents/Coding/Programming Course/Cheat Sheets/Workshops/social-app/src/views/SignUp.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport './SignUp.css';\nimport axios from \"axios\";\n\n\nconst SignUp = (props) => {\n\n    const [formData, setFormData] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n\n    const [errors, setErrors] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n\n    const validate = () => {\n        let validationErrors = {\n            username: false,\n            email: false,\n            password: false,\n            confirmPassword: false\n        };\n        //Username\n        if (formData.username.trim().length < 4) {\n            validationErrors.username = true\n            setErrors(prevErrors => {\n                return {\n                    ...prevErrors,\n                    username: \"Username should have at least 4 characters\",\n                };\n            });\n        } else if (!/^[^\\s]*$/.test(formData.username.trim())) {\n            validationErrors.username = true\n            setErrors(prevErrors => {\n                return {\n                    ...prevErrors,\n                    username: \"Username shouldn't have empty characters\",\n                };\n            });\n        } else {\n            validationErrors.username = false;\n            setErrors(prevErrors => {\n                return {\n                    ...prevErrors,\n                    username: \"\",\n                };\n            });\n        }\n\n        //Email\n\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.email.trim())) {\n            validationErrors.email = true;\n            setErrors(prevErrors => {\n                return {\n                    ...prevErrors,\n                    email: \"There is no valid email\",\n                };\n            });\n        } else {\n            validationErrors.email = false;\n            setErrors(prevErrors => {\n                return {\n                    ...prevErrors,\n                    email: \"\",\n                };\n            });\n        }\n\n        //Password\n\n        if (formData.password.trim().length < 6) {\n            validationErrors.password = true;\n            setErrors((prevErrors) => {\n                return {\n                    ...prevErrors,\n                    password: \"Password should have at least 6 characters\",\n                };\n            });\n        } else if (!/^[^\\s]*$/.test(formData.password.trim())) {\n            validationErrors.password = true;\n            setErrors((prevErrors) => {\n                return {\n                    ...prevErrors,\n                    password: \"Password shouldn't have empty characters\",\n                };\n            });\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formData.password.trim())) {\n            validationErrors.password = true;\n            setErrors((prevErrors) => {\n                return {\n                    ...prevErrors,\n                    password: \"Password must contain a special character: ! # @ $ %\",\n                };\n            });\n        } else {\n            validationErrors.password = false;\n            setErrors((prevErrors) => {\n                return {\n                    ...prevErrors,\n                    password: \"\",\n                };\n            });\n        }\n\n        //Confirm Password\n\n        if (formData.password.trim() !== formData.confirmPassword.trim()) {\n            validationErrors.confirmPassword = true;\n            setErrors((prevErrors) => {\n                return {\n                    ...prevErrors,\n                    confirmPassword: \"Passwords should be the same\",\n                };\n            });\n        } else {\n            validationErrors.confirmPassword = false;\n            setErrors((prevErrors) => {\n                return {\n                    ...prevErrors,\n                    confirmPassword: \"\",\n                };\n            });\n        }\n\n        return (\n            !validationErrors.username &&\n            !validationErrors.email &&\n            !validationErrors.password &&\n            !validationErrors.confirmPassword\n\n        );\n    };\n\n\n    const handleInputChange = (e) => {\n        const target = e.target;\n        const name = target.name;\n\n        setFormData({\n            ...formData,\n            [name]: target.value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (!validate()) {\n\n        }\n\n        axios\n            .post(\"https://akademia108.pl/api/social-app/user/signup\", {\n                username: formData.username,\n                email: formData.email,\n                password: formData.password,\n            })\n            .then((res) => {\n                console.log(res.data);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    };\n\n    return (\n        <div className=\"signUp\">\n            {props.user && <Navigate to=\"/\" />}\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    onChange={handleInputChange}\n                />\n                {errors.username && <p>{errors.username}</p>}\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={handleInputChange}\n                />\n                {errors.email && <p>{errors.email}</p>}\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={handleInputChange}\n                />\n                {errors.password && <p>{errors.password}</p>}\n                <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm password\"\n                    onChange={handleInputChange}\n                />\n                {errors.confirmPassword && <p>{errors.confirmPassword}</p>}\n                <button className=\"btn\">Sign Up</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}